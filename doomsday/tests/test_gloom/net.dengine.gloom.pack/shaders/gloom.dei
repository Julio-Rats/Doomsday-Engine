@include <indirect.dei>
@include <entity.dei>

group gloom {
    shader surface { path = "surface" }
    shader ssao { path = "ssao" }
    shader finalize {
        vertex = "
            uniform mat4 uMvpMatrix;
            DENG_ATTRIB vec4 aVertex;
            DENG_ATTRIB vec2 aUV;
            DENG_VAR vec2 vUV;
            void main(void) {
                gl_Position = uMvpMatrix * aVertex;
                vUV = aUV;
            }
        "
        fragment = "
            #include 'common/gbuffer_in.glsl'
            uniform int uDebugMode;
            DENG_VAR vec2 vUV;
            void main(void) {
                if (uDebugMode == 0) {
                    out_FragColor = texture(uGBufferAlbedo, vUV);
                }
                else if (uDebugMode == 1) {
                    out_FragColor = texture(uGBufferNormal, vUV);
                }
                else if (uDebugMode == 2) {
                    out_FragColor = GBuffer_FragmentViewSpacePos();
                }
            }
        "
    }
}
